// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
* Clear inner floats
* ----------------------------------------------------------------------------- */
.clearfix::after {
    clear: both;
    content: '';
    display: table;
}

/**
* floats
* ----------------------------------------------------------------------------- */
.float-left { float: left; }
.float-right { float: right; }
.float-none { float: none; }

/**
* Hide element while making it readable for screen readers
* Shamelessly borrowed from HTML5Boilerplate:
* https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
*/
.visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/**
* Text
* ----------------------------------------------------------------------------- */

/**
* Text variations
*/
.text-italic { font-style: italic; }
.text-lowercase { text-transform: lowercase; }
.text-titlecase { text-transform: capitalize; }
.text-uppercase { text-transform: uppercase; }

/**
* Text decoration
*/
.text-overline { text-decoration: overline; }
.text-line-through { text-decoration: line-through; }
.text-underline { text-decoration: underline; }
.text-no-decoration { text-decoration: none; }

/**
* Hide text while making it readable for screen readers
* 1. Needed in WebKit-based browsers because of an implementation bug;
*    See: https://code.google.com/p/chromium/issues/detail?id=457146
*/
.text-hide {
    overflow: hidden;
    padding: 0; /* 1 */
    text-indent: 101%;
    white-space: nowrap;
}

/**
* Text wrapping / space
*/
.text-break-all { word-break: break-all; }
.text-keep-all { word-break: keep-all; }
.text-break-word { word-wrap: break-word; }
.text-no-wrap { white-space: nowrap; }
.text-pre { white-space: pre; }
.text-pre-wrap { white-space: pre-wrap; }
.text-pre-line { white-space: pre-line; }
@include map-repeater(t-indent, text-indent, $spaces, $important: false, $rem: true);

/**
* Text overflow
*/
.text-elipsis { text-overflow: ellipsis }

/**
* Text aligment
*/
.text-right { text-align: right; }
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-justify { text-align: justify; }

/**
* Text truncated
*/
.text-truncate {
    @include truncate(100px);
}

/**
* Vertical Aligment
* ----------------------------------------------------------------------------- */

.align-baseline { vertical-align: baseline; }
.align-top { vertical-align: top; }
.align-middle { vertical-align: middle; }
.align-bottom { vertical-align: bottom; }

/**
* Spacing
* ----------------------------------------------------------------------------- */
// Inset
@include map-repeater(inset, padding, $spaces, $rem: true);

// // Stack
@include map-repeater(stack, margin, $spaces, ($spaces 0 0 0), $rem: true);

// // Inline
@include map-repeater(inline, margin, $spaces, (0 $spaces 0 0), $rem: true);

// // Margin
@include map-repeater(mt, margin-top, $spaces, $rem: true);
@include map-repeater(mr, margin-right, $spaces, $rem: true);
@include map-repeater(mb, margin-bottom, $spaces, $rem: true);
@include map-repeater(ml, margin-left, $spaces, $rem: true);
@include map-repeater(m, margin, $spaces, $rem: true);
@include map-repeater(mx, margin, $spaces, ($spaces 0 $spaces 0), $rem: true);
@include map-repeater(my, margin, $spaces, (0 $spaces 0 $spaces), $rem: true);

// Padding
@include map-repeater(pt, padding-top, $spaces, $rem: true);
@include map-repeater(pr, padding-right, $spaces, $rem: true);
@include map-repeater(pb, padding-bottom, $spaces, $rem: true);
@include map-repeater(pl, padding-left, $spaces, $rem: true);
@include map-repeater(px, padding, $spaces, ($spaces 0 $spaces 0), $rem: true);
@include map-repeater(py, padding, $spaces, (0 $spaces 0 $spaces), $rem: true);

// // Position
@include map-repeater(top, top, $spaces, $rem: true);
@include map-repeater(right, right, $spaces, $rem: true);
@include map-repeater(bottom, bottom, $spaces, $rem: true);
@include map-repeater(left, left, $spaces, $rem: true);


/**
* Display
* ----------------------------------------------------------------------------- */
.display-block { display: block; }
.display-inline-block { display: inline-block; }
.display-inline { display: inline; }

/**
* Flexbox Helpers
* ----------------------------------------------------------------------------- */
.flex { display: flex }
.inline-flex { display: inline-flex }
.flex-column  { flex-direction: column }
.flex-wrap    { flex-wrap: wrap }

.items-start    { align-items: flex-start }
.items-end      { align-items: flex-end }
.items-center   { align-items: center }
.items-baseline { align-items: baseline }
.items-stretch  { align-items: stretch }

.self-start    { align-self: flex-start }
.self-end      { align-self: flex-end }
.self-center   { align-self: center }
.self-baseline { align-self: baseline }
.self-stretch  { align-self: stretch }

.justify-start   { justify-content: flex-start }
.justify-end     { justify-content: flex-end }
.justify-center  { justify-content: center }
.justify-between { justify-content: space-between }
.justify-around  { justify-content: space-around }
.justify-evenly  { justify-content: space-evenly }

.content-start   { align-content: flex-start }
.content-end     { align-content: flex-end }
.content-center  { align-content: center }
.content-between { align-content: space-between }
.content-around  { align-content: space-around }
.content-stretch { align-content: stretch }

/* 1. Fix for Chrome 44 bug. https://code.google.com/p/chromium/issues/detail?id=506893 */
.flex-auto {
  flex: 1 1 auto;
  min-width: 0; /* 1 */
  min-height: 0; /* 1 */
}
.flex-none { flex: none }

.order-0 { order: 0 }
.order-1 { order: 1 }
.order-2 { order: 2 }
.order-3 { order: 3 }
.order-4 { order: 4 }
.order-last { order: 99999 }

/**
* Borders
* ----------------------------------------------------------------------------- */


/**
* Media queries
* ----------------------------------------------------------------------------- */
//.hide-on-phone {
//    @include media-query-breakpoint('phone', $type: max) {
//        display: none;
//    }
//}
//
//.hide-on-tablet {
//    @include media-query-breakpoint('tablet', $type: max) {
//        display: none;
//    }
//}
//
//.hide-on-small-desktop {
//    @include media-query-breakpoint('small-desktop', $type: max) {
//        display: none;
//    }
//}
//
//.hide-on-desktop {
//    @include media-query-breakpoint('desktop', $type: max) {
//        display: none;
//    }
//}
//
//.hide-on-large-desktop {
//    @include media-query-breakpoint('large-desktop', $type: max) {
//        display: none;
//    }
//}
//
//.show-on-phone {
//    @include media-query-breakpoint('phone', $type: max) {
//        display: block;
//    }
//}
//
//.show-on-tablet {
//    @include media-query-breakpoint('large-desktop', $type: min) {
//        display: none;
//    }
//    @include media-query-breakpoint('large-desktop', $type: max) {
//        display: none;
//    }
//    @include media-query-breakpoint('tablet', $type: max) {
//        display: block;
//    }
//}
//
//.show-on-small-desktop {
//    @include media-query-breakpoint('large-desktop', $type: min) {
//        display: none;
//    }
//    @include media-query-breakpoint('large-desktop', $type: max) {
//        display: none;
//    }
//    @include media-query-breakpoint('small-desktop', $type: max) {
//        display: block;
//    }
//}
//
//.show-on-desktop {
//    @include media-query-breakpoint('large-desktop', $type: min) {
//        display: none;
//    }
//    @include media-query-breakpoint('large-desktop', $type: max) {
//        display: none;
//    }
//    @include media-query-breakpoint('desktop', $type: max) {
//        display: block;
//    }
//}
//
//.show-on-large-desktop {
//    @include media-query-breakpoint('large-desktop', $type: max) {
//        display: block;
//    }
//}
//
//.equal-widths-elements-mobile {
//    @include media-query-breakpoint('tablet', $type: max) {
//        @include display-flex;
//        @include flex-wrap(nowrap);
//        @include justify-content(flex-start);
//    }
//
//    & > * {
//        @include flex(1 0);
//    }
//}

/**
* Z-Index
* ----------------------------------------------------------------------------- */
@include map-repeater(z, z-index, $zIndex, $rem: false);
