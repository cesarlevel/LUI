// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
* Clear inner floats
* ----------------------------------------------------------------------------- */
.clearfix::after {
    clear: both;
    content: '';
    display: table;
}

/**
* floats
* ----------------------------------------------------------------------------- */
.float-left { float: left; }
.float-right { float: right; }
.float-none { float: none; }

/**
* Hide element while making it readable for screen readers
* Shamelessly borrowed from HTML5Boilerplate:
* https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
*/
.visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/**
* Text
* ----------------------------------------------------------------------------- */

/**
* Text variations
*/
.text-italic { font-style: italic; }
.text-lowercase { text-transform: lowercase; }
.text-titlecase { text-transform: capitalize; }
.text-uppercase { text-transform: uppercase; }

/**
* Text decoration
*/
.text-overline { text-decoration: overline; }
.text-line-through { text-decoration: line-through; }
.text-underline { text-decoration: underline; }
.text-no-decoration { text-decoration: none; }

/**
* Hide text while making it readable for screen readers
* 1. Needed in WebKit-based browsers because of an implementation bug;
*    See: https://code.google.com/p/chromium/issues/detail?id=457146
*/
.text-hide {
    overflow: hidden;
    padding: 0; /* 1 */
    text-indent: 101%;
    white-space: nowrap;
}

/**
* Text wrapping / space
*/
.text-break-all { word-break: break-all; }
.text-keep-all { word-break: keep-all; }
.text-break-word { word-wrap: break-word; }
.text-no-wrap { white-space: nowrap; }
.text-pre { white-space: pre; }
.text-pre-wrap { white-space: pre-wrap; }
.text-pre-line { white-space: pre-line; }
@include map-repeater(t-indent, text-indent, $spaces, $important: false, $rem: true);

/**
* Text overflow
*/
.text-elipsis { text-overflow: ellipsis }

/**
* Text aligment
*/
.text-right { text-align: right; }
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-justify { text-align: justify; }

/**
* Text truncated
*/
.text-truncate {
    @include truncate(100px);
}

/**
* Vertical Aligment
* ----------------------------------------------------------------------------- */

.align-baseline { vertical-align: baseline; }
.align-top { vertical-align: top; }
.align-middle { vertical-align: middle; }
.align-bottom { vertical-align: bottom; }

/**
* Spacing
* ----------------------------------------------------------------------------- */

// Inset
@include map-repeater(inset, padding, $spaces, $rem: true);

// Stack
@include map-repeater(stack, margin, $spaces, ($spaces 0 0 0), $rem: true);

// Inline
@include map-repeater(inline, margin, $spaces, (0 $spaces 0 0 ), $rem: true);

// Margin
@include map-repeater(margin-top, margin-top, $spaces, $rem: true);
@include map-repeater(margin-right, margin-right, $spaces, $rem: true);
@include map-repeater(margin-bottom, margin-bottom, $spaces, $rem: true);
@include map-repeater(margin-left, margin-left, $spaces, $rem: true);

// Padding
@include map-repeater(padding-top, padding-top, $spaces, $rem: true);
@include map-repeater(padding-right, padding-right, $spaces, $rem: true);
@include map-repeater(padding-bottom, padding-bottom, $spaces, $rem: true);
@include map-repeater(padding-left, padding-left, $spaces, $rem: true);

// Position
@include map-repeater(top, top, $spaces, $rem: true);
@include map-repeater(right, right, $spaces, $rem: true);
@include map-repeater(bottom, bottom, $spaces, $rem: true);
@include map-repeater(left, left, $spaces, $rem: true);


/**
* Flex Helpers
* ----------------------------------------------------------------------------- */
.display-flex {
    @include display-flex();
}

.display-inline-flex {
    @include display-inline-flex();
}

.no-flex {
    width: auto;
    @include flex(0 0 auto);
}

.align-items-center {
    @include align-items(center);
}

.justify-content-end {
    @include justify-content(flex-end);
}

/**
* Media queries
* ----------------------------------------------------------------------------- */
.hide-on-phone {
    @include media-query-breakpoint('phone', $type: max) {
        display: none;
    }
}

.hide-on-tablet {
    @include media-query-breakpoint('tablet', $type: max) {
        display: none;
    }
}

.hide-on-small-desktop {
    @include media-query-breakpoint('small-desktop', $type: max) {
        display: none;
    }
}

.hide-on-desktop {
    @include media-query-breakpoint('desktop', $type: max) {
        display: none;
    }
}

.hide-on-large-desktop {
    @include media-query-breakpoint('large-desktop', $type: max) {
        display: none;
    }
}

.show-on-phone {
    @include media-query-breakpoint('phone', $type: max) {
        display: block;
    }
}

.show-on-tablet {
    @include media-query-breakpoint('large-desktop', $type: min) {
        display: none;
    }
    @include media-query-breakpoint('large-desktop', $type: max) {
        display: none;
    }
    @include media-query-breakpoint('tablet', $type: max) {
        display: block;
    }
}

.show-on-small-desktop {
    @include media-query-breakpoint('large-desktop', $type: min) {
        display: none;
    }
    @include media-query-breakpoint('large-desktop', $type: max) {
        display: none;
    }
    @include media-query-breakpoint('small-desktop', $type: max) {
        display: block;
    }
}

.show-on-desktop {
    @include media-query-breakpoint('large-desktop', $type: min) {
        display: none;
    }
    @include media-query-breakpoint('large-desktop', $type: max) {
        display: none;
    }
    @include media-query-breakpoint('desktop', $type: max) {
        display: block;
    }
}

.show-on-large-desktop {
    @include media-query-breakpoint('large-desktop', $type: max) {
        display: block;
    }
}

.equal-widths-elements-mobile {
    @include media-query-breakpoint('tablet', $type: max) {
        @include display-flex;
        @include flex-wrap(nowrap);
        @include justify-content(flex-start);
    }

    & > * {
        @include flex(1 0);
    }
}

/**
* Z-Index
* ----------------------------------------------------------------------------- */
@include map-repeater(z, z-index, $zIndex, $rem: false);
